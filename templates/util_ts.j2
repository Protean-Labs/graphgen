import { BigInt, BigDecimal, Address } from '@graphprotocol/graph-ts'
export const BigIntZero =  BigInt.fromI32(0)
export const BigIntOne =  BigInt.fromI32(1)
export const BigDecimalZero = BigDecimal.fromString('0')
export const BigDecimalOne = BigDecimal.fromString('1')

export function createTransaction(tx: Transaction, block: Block): void {
  let txEntity = new Transaction(tx.hash.toHexString().toString())
  txEntity.txIndex = tx.index
  txEntity.from = tx.from.toHexString().toString()
  txEntity.to = tx.to.toHexString().toString()
  txEntity.blockNumber = block.number
  txEntity.blockTimesatmp = block.timestamp
  txEntity.save()
}

export function getCreateTransaction(tx: Transaction, block: Block): void {
  let txEntity = Transaction.load(tx.hash.toHexString().toString())
  if (txEntity == null) {
    createTransaction(tx, block)
  }
}