{% set ns = namespace (has_events=false, has_calls=false) -%}
{%- for dataSource in subgraph.dataSources -%}
{%- if dataSource.eventHandlers != [] -%}
{%- set ns.has_events = true -%}
{%- endif -%}
{%- if dataSource.callHandlers != [] -%}
{%- set ns.has_calls = true -%}
{%- endif -%}
{%- endfor -%}
{%- for template in subgraph.templates -%}
{%- if template.eventHandlers != [] -%}
{%- set ns.has_events = true -%}
{%- endif -%}
{%- if template.callHandlers != [] -%}
{%- set ns.has_calls = true -%}
{%- endif -%}
{%- endfor -%}
type Transaction @entity {
  id: ID!   # tx hash
  txIndex: Int!
  from: Bytes!
  to: Bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  {% if ns.has_events %} events: [Event!]! @derivedFrom(field: "tx") {% endif %}
  {% if ns.has_calls %} calls: [Call!]! @derivedFrom(field: "tx") {% endif %}
}

{% if ns.has_events -%}
interface Event {
  id: ID!   # CONTRACT_ADDR-PER_EVENT_COUNTER
  logIndex: BigInt!
  tx: Transaction!
}
{% endif %}

{%- if ns.has_calls %}
interface Call {
  id: ID!   # CONTRACT_ADDR-PER_CALL_COUNTER
  tx: Transaction!
}
{% endif -%}

{% for dataSource in subgraph.dataSources -%}
{%- set contract = dataSource.contract %}
type {{ contract.name }} @entity {
  id: ID!   # CONTRACT_ADDR
  {% for field in contract.fields %}
  {{ field.name }}: {{ field.type }}!
  {% endfor %}

  {% for eventHandler in dataSource.eventHandlers %}
  {% if eventHandler.store %}
  {{ eventHandler.event.name | counterName }}: BigInt!
  latest{{ eventHandler.event.name }}: {{ eventHandler.event.name }}
  {{ eventHandler.event.name | uncapitalize }}s: [{{ eventHandler.event.name }}!]! @derivedFrom(field: "{{ contract.name  | uncapitalize }}")
  {% endif %}
  {% endfor %}

  {% for call_ in contract.calls %}
  {{ call_.name | counterName }}: BigInt!
  latest{{ call_.name }}: {{ call_.name }}
  {{ call_.name | uncapitalize }}s: [{{ call_.name }}!]! @derivedFrom(field: "{{ contract.name  | uncapitalize }}")
  {% endfor %}

  {% for child in dataSource.contract.childContracts %}
  {{ child.name | counterName }}: BigInt!
  latest{{ child.name }}: {{ child.name }}
  {{ child.name | uncapitalize }}s: [{{ child.name }}!]! @derivedFrom(field: "{{ contract.name  | uncapitalize }}")
  {% endfor %}
}

{% for eventHandler in dataSource.eventHandlers %}
{% if eventHandler.store %}
type {{ eventHandler.event.name }} implements Event @entity {
  id: ID!   # CONTRACT_ADDR-PER_EVENT_COUNTER
  logIndex: BigInt!
  tx: Transaction!

  # Event params
  {%- for (name, type) in eventHandler.event.fields -%}
  {{ name }}: {{ type }}!
  {%- endfor -%}

  {{ contract.name | uncapitalize }}: {{ contract.name }}!
}
{% endif %}
{% endfor %}

{% for callHandler in dataSource.callHandlers %}
{% if callHandler.store %}
type {{ callHandler.call_.name }} implements Call @entity {
  id: ID!   # CONTRACT_ADDR-PER_CALL_COUNTER
  logIndex: BigInt!
  tx: Transaction!

  # Call inputs
  {% for (name, type) in callHandler.call_.inputs %}
  {{ name }}: {{ type }}!
  {% endfor %}

  # Call outputs
  {% for (name, type) in callHandler.call_.outputs %}
  {{ name }}: {{ type }}!
  {% endfor %}

  {{ contract.name | uncapitalize }}: {{ contract.name }}!
}
{%- endif -%}
{%- endfor -%}
{%- endfor %}

{% for template in subgraph.templates %}
{% set contract = template.contract %}
type {{ contract.name }} @entity {
  id: ID!   # CONTRACT_ADDR
  
  {% for field in contract.fields -%}
  {{ field.name }}: {{ field.type }}!
  {% endfor %}

  {% for eventHandler in template.eventHandlers -%}
  {%- if eventHandler.store -%}
  {{ eventHandler.event.name | counterName }}: BigInt!
  latest{{ eventHandler.event.name }}: {{ eventHandler.event.name }}
  {{ eventHandler.event.name | uncapitalize }}s: [{{ eventHandler.event.name }}!]! @derivedFrom(field: "{{ contract.name  | uncapitalize }}")

  {% endif -%}
  {%- endfor %}

  {% for callHandler in template.callHandlers -%}
  {%- if callHandler.store -%}
  {{ callHandler.call_.name | counterName }}: BigInt!
  latest{{ callHandler.call_.name }}: {{ callHandler.call_.name }}
  {{ callHandler.call_.name | uncapitalize }}s: [{{ callHandler.call_.name }}!]! @derivedFrom(field: "{{ contract.name  | uncapitalize }}")
  {%- endif -%}
  {%- endfor %}

  {%- if contract.parentContract != None -%}
  {{ contract.parentContract.name | uncapitalize }}: {{ contract.parentContract.name }}!
  {%- endif %}

  {% for child in template.contract.childContracts -%}
  {{ child.name | counterName }}: BigInt!
  latest{{ child.name }}: {{ child.name }}
  {{ child.name | uncapitalize }}s: [{{ child.name }}!]! @derivedFrom(field: "{{ contract.name | uncapitalize }}")
  {%- endfor %}
}

{% for eventHandler in template.eventHandlers %}
{% if eventHandler.store %}
type {{ eventHandler.event.name }} implements Event @entity {
  id: ID!   # CONTRACT_ADDR-PER_EVENT_COUNTER
  logIndex: BigInt!
  tx: Transaction!

  # Event params
  {%- for (name, type) in eventHandler.event.fields %}
  {{ name }}: {{ type }}!
  {%- endfor %}

  {{ contract.name | uncapitalize }}: {{ contract.name }}!
}
{%- endif -%}
{%- endfor %}

{% for callHandler in contract.callHandlers %}
{% if callHandler.store %}
type {{ callHandler.call_.name }} implements Call @entity {
  id: ID!   # CONTRACT_ADDR-PER_CALL_COUNTER
  logIndex: BigInt!
  tx: Transaction!

  # Call inputs
  {% for (name, type) in callHandler.call_.inputs %}
  {{ name }}: {{ type }}!
  {% endfor %}

  # Call outputs
  {% for (name, type) in callHandler.call_.outputs %}
  {{ name }}: {{ type }}!
  {% endfor %}

  {{ contract.name | uncapitalize }}: {{ contract.name }}!
}
{%- endif -%}
{%- endfor -%}
{%- endfor %}